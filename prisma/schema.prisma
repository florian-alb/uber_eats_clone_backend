generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Shop {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @unique @db.VarChar(255)
  image      String?
  addressId  String?   @db.Uuid
  categoryId String?   @db.Uuid
  orders     Order[]
  products   Product[]
  reviews    Review[]
  address    Address?  @relation(fields: [addressId], references: [id])
  Category   Category? @relation(fields: [categoryId], references: [id])
  users      User[]
}

model Product {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String         @db.VarChar(255)
  createdAt     DateTime       @default(now())
  image         String?
  description   String?
  price         Decimal
  menuId        String?        @db.Uuid
  shopId        String?        @db.Uuid
  shop          Shop?          @relation(fields: [shopId], references: [id])
  orderProducts OrderProduct[]
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique
  firstName String
  lastName  String
  password  String
  money     Decimal?
  role      Role      @default(USER)
  shopId    String?   @db.Uuid
  addresses Address[]
  orders    Order[]
  shop      Shop?     @relation(fields: [shopId], references: [id])
}

model Address {
  id      String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address String  @db.VarChar(255)
  userId  String? @db.Uuid
  User    User?   @relation(fields: [userId], references: [id])
  order   Order[]
  shop    Shop[]
}

model Category {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @db.VarChar(255)
  icon String
  shop Shop[]
}

model Order {
  id                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime       @default(now())
  deliveryAddressId String         @db.Uuid
  userId            String         @db.Uuid
  shopId            String         @db.Uuid
  isDelivered       Boolean        @default(false)
  deliveryAddress   Address        @relation(fields: [deliveryAddressId], references: [id])
  shop              Shop           @relation(fields: [shopId], references: [id])
  customer          User           @relation(fields: [userId], references: [id])
  orderProducts     OrderProduct[]
}

model Review {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating Float
  review String
  shopID String @db.Uuid
  shop   Shop   @relation(fields: [shopID], references: [id])
}

model OrderProduct {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId   String  @db.Uuid
  productId String  @db.Uuid
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  SHOP
  ADMIN
  BANNED
}
