generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Shop {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @unique @db.VarChar(255)
  image      String?
  addressId  String?   @db.Uuid
  categoryId String?   @db.Uuid
  orders     Order[]
  products   Product[]
  reviews    Review[]
  address    Address?  @relation(fields: [addressId], references: [id])
  Category   Category? @relation(fields: [categoryId], references: [id])
  users      User[]
}

model Product {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String  @db.VarChar(255)
  image       String?
  description String?
  price       Decimal
  menuId      String? @db.Uuid
  orderId     String? @db.Uuid
  shopId      String? @db.Uuid
  menu        Menu?   @relation(fields: [menuId], references: [id])
  Order       Order?  @relation(fields: [orderId], references: [id])
  shop        Shop?   @relation(fields: [shopId], references: [id])
}

model Menu {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String    @db.VarChar(255)
  image    String?
  products Product[]
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique
  firstName String
  lastName  String
  password  String
  money     Decimal?
  role      Role      @default(USER)
  shopId    String?   @db.Uuid
  addresses Address[]
  orders    Order[]
  shop      Shop?     @relation(fields: [shopId], references: [id])
}

model Address {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String  @db.VarChar(255)
  address    String
  postalCode String
  city       String
  country    String
  userId     String? @db.Uuid
  User       User?   @relation(fields: [userId], references: [id])
  Order      Order[]
  shop       Shop[]
}

model Category {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @db.VarChar(255)
  icon String
  shop Shop[]
}

model Order {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime  @default(now())
  deliveryAddressId String    @db.Uuid
  isDelivred        Boolean   @default(false)
  userId            String    @db.Uuid
  shopId            String    @db.Uuid
  deliveryAddress   Address   @relation(fields: [deliveryAddressId], references: [id])
  shop              Shop      @relation(fields: [shopId], references: [id])
  customer          User      @relation(fields: [userId], references: [id])
  products          Product[]
}

model Review {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating Float
  review String
  shopID String @db.Uuid
  shop   Shop   @relation(fields: [shopID], references: [id])
}

enum Role {
  USER
  SHOP
  ADMIN
  BANNED
}
